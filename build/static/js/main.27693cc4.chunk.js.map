{"version":3,"sources":["Navbar.js","DummyData.js","components/RiskPreference.js","components/RiskTable.js","components/Donut.js","pages/home.js","components/DisabledInput.js","pages/calculator.js","AppRouter.js","App.js","store/reducer.js","index.js"],"names":["Navbar","props","style","padding","color","display","backgroundColor","justifyContent","to","className","fontSize","margin","riskData","riskNo","RiskPreference","setRiskPrefernce","selectedRow","history","map","item","id","onClick","push","opacity","RiskTable","data","riskPreference","bonds","large_cap","mid_cap","foreign","small_cap","Donut","updateDonut","length","Object","values","shift","setState","series","state","options","this","dataLabels","enabled","formatter","val","opts","w","globals","seriesNames","toFixed","prevProps","type","width","Component","Home","onSetRiskPreference","showPie","React","connect","selectedRiskPreference","selectedRiskData","dispatch","value","withRouter","DisabledInput","disabled","name","new","Calculator","rebalance","allValues","portfolioData","Number","isInvalid","some","i","isNaN","sum","reduce","a","b","labelMap","0","1","2","3","4","riskPreferenceValues","amt","label","setFixedDecimal","difference","balance","slice","newAmount","recommendTransfers","getTransferStatement","amount","from","Math","round","transfers","negativeAmount","filter","postiveAmount","sort","forEach","nitem","pitem","j","abs","onHandleChange","e","payload","target","onSetPayLoad","activateRebalance","allPortFolioAmounts","getDiffAndNewCols","key","bond","largeCap","midCap","smallCap","bondDif","largeCapDif","midCapDif","foreignDif","smallCapDif","onChange","rowSpan","v","AppRouter","path","App","initialState","reducer","action","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27693cc4.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Navbar(props) {\n  let iconStyle= {fontSize: '48px', color: '#ffffff',}\n  let headerStyle= {padding:'15px', color: '#ffffff', display: 'flex', backgroundColor:'#0285b8', justifyContent:'space-between'}\n  return (\n    <header style={headerStyle}>\n      <div>\n        <Link to='/home'><i className='fa fa-home' style={iconStyle}></i></Link>\n      </div>\n      <div>\n        <h1 style={{margin: '5px'}}>Financial Advisor</h1>\n      </div>\n      <div>\n      </div>\n    </header>  \n  )\n}","const riskData = [\n    { 'riskPreference': 1, 'bonds': 80, 'large_cap': 20, 'mid_cap': 0, 'foreign': 0, 'small_cap': 0  },\n    { 'riskPreference': 2, 'bonds': 70, 'large_cap': 15, 'mid_cap': 15, 'foreign': 0, 'small_cap': 0  },\n    { 'riskPreference': 3, 'bonds': 60, 'large_cap': 15, 'mid_cap': 15, 'foreign': 10, 'small_cap': 0  },\n    { 'riskPreference': 4, 'bonds': 50, 'large_cap': 20, 'mid_cap': 20, 'foreign': 10, 'small_cap': 0  },\n    { 'riskPreference': 5, 'bonds': 40, 'large_cap': 20, 'mid_cap': 20, 'foreign': 20, 'small_cap': 0  },\n    { 'riskPreference': 6, 'bonds': 35, 'large_cap': 25, 'mid_cap': 5, 'foreign': 30, 'small_cap': 5  },\n    { 'riskPreference': 7, 'bonds': 20, 'large_cap': 25, 'mid_cap': 25, 'foreign': 25, 'small_cap': 5  },\n    { 'riskPreference': 8, 'bonds': 10, 'large_cap': 20, 'mid_cap': 40, 'foreign': 20, 'small_cap': 10  },\n    { 'riskPreference': 9, 'bonds': 5, 'large_cap': 15, 'mid_cap': 40, 'foreign': 25, 'small_cap': 15  },\n    { 'riskPreference': 10, 'bonds': 0, 'large_cap': 5, 'mid_cap': 25, 'foreign': 30, 'small_cap': 40  }\n]\n\nconst riskNo = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\nexport {riskData, riskNo}","import React from 'react';\n\nconst RiskPreference = (props) => {\n  let {riskNo, setRiskPrefernce, selectedRow, history} = props\n  let redirect = () => {\n    if (selectedRow > 0) {\n      history.push('/calculator')\n    }\n  }\n  return (\n    <div className='risk-preference-container'>\n      <div className='risk-preference-ul-label'>\n        <p>Low</p>\n        <p>High</p>\n      </div>\n      <ul className='risk-preference-ul'>\n        {\n          riskNo.map((item, id) => {\n            return (\n              <li \n                className='risk-preference-li'\n                style={selectedRow === item ? {backgroundColor: '#e6ff3f'}: null}\n                onClick={() => setRiskPrefernce(item)} \n                key={id}>\n                  {item}\n                </li>\n            )}\n          )\n        }\n        <li onClick={redirect} className='risk-preference-continue' style={selectedRow === 0 ? {opacity: '0.3'}: null}>Continue</li>\n      </ul>\n    </div>\n  )\n}\n\nexport default RiskPreference","import React from 'react';\n\nconst RiskTable = (props) => {\n  return (\n    <table className=\"table table-bordered\">\n      <thead>\n        <tr>\n          <th>Risk</th>\n          <th>Bonds %</th>\n          <th>Large Cap %</th>\n          <th>Mid Cap %</th>\n          <th>Foreign %</th>\n          <th>Small Cap %</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          props.data.map((item) => {\n            let {riskPreference, bonds, large_cap, mid_cap, foreign, small_cap} = item\n            return (\n              <tr style={props.selectedRow === riskPreference ? {backgroundColor: '#e6ff3f'}: null} key={riskPreference}>\n                <td>{riskPreference}</td>\n                <td>{bonds}</td>\n                <td>{large_cap}</td>\n                <td>{mid_cap}</td>\n                <td>{foreign}</td>\n                <td>{small_cap}</td>\n              </tr>\n            )\n          })\n        }\n      </tbody>\n    </table>\n  )\n}\n\nexport default RiskTable","import React, { Component } from 'react';\nimport Chart from 'react-apexcharts'\n\nclass Donut extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {},\n      series: [20, 20, 20, 20, 20]\n    }\n  }\n\n  componentDidMount () {\n    let options = {\n      dataLabels: {\n        enabled: true,\n        formatter: function (val, opts) {\n          opts.w.globals.seriesNames = ['Bonds', 'Large Cap', 'Mid Cap', 'Foreign', 'Small Cap']\n          return val.toFixed(0) + \"%\"\n        }\n      }\n    }\n    this.setState({options})\n    this.updateDonut()\n  }\n  updateDonut = () => {\n    if (this.props.riskPreference.length > 0) {\n      let data = [...Object.values(this.props.riskPreference[0])]\n      if (data.length > 0) {\n        data.shift()\n        this.setState({series: data})\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if ((prevProps.riskPreference[0] || [{riskPreference: ''}]).riskPreference !== (this.props.riskPreference[0] || [{riskPreference: ''}]).riskPreference) {\n      this.updateDonut()\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"donut\">\n        <Chart \n          options={this.state.options} \n          series={this.state.series} type=\"donut\" width=\"580\" />\n      </div>\n    );\n  }\n}\n\nexport default Donut;","import React from 'react'\nimport {riskNo, riskData} from '../DummyData'\nimport {connect} from 'react-redux'\nimport RiskPreference from './../components/RiskPreference'\nimport RiskTable from './../components/RiskTable'\nimport Donut from './../components/Donut'\nimport { withRouter } from 'react-router-dom';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showPie: false\n    }\n  }\n  componentDidMount () {\n    // console.log(this)\n    // console.log(riskPreference)\n  }\n\n  setRiskPrefernce = (val) => {\n    this.props.onSetRiskPreference(val)\n  }\n\n  render () {\n    return (\n      <div className='container'>\n        <div className='text-center'>\n          <h3>Please Select A Risk Level For Your Investment Portfolio</h3>\n          <RiskPreference {...this.props}\n            setRiskPrefernce={this.setRiskPrefernce}\n            riskNo={riskNo} />\n        </div>\n        <div className='text-right mt-40' style={{display: 'flex'}}>\n          {\n            !this.state.showPie \n            ?\n            <RiskTable data={riskData} selectedRow = {this.props.selectedRow} />\n            :\n            <div className=\"donut-container\">\n              <Donut riskPreference = {this.props.riskPreference}/>\n            </div>\n          }\n          <div className=\"pie-icon-container\" onClick={() => this.setState({showPie:!this.state.showPie})}>\n            {\n              this.state.showPie \n              ?\n              <i className=\"fa fa-line-chart line-icon\"></i>\n              :\n              <i className=\"fa fa-pie-chart pie-icon\"></i>\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedRow: state.selectedRiskPreference,\n    riskPreference: state.selectedRiskData\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetRiskPreference: (value) => dispatch({type: 'SELECT_RISK_ROW', value: value})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Home))","import React from 'react';\n\nconst DisabledInput = (props) => {\n  return (\n    <input \n      value={props.value}\n      disabled\n      name=\"difference\"\n      style={!props.new ?  props.value > 0 ? {color: 'green'}: {color:'red'} : {color: 'blue'}}\n      className='input-table-2 text-right' type=\"text\"/>\n  )\n}\n\nexport default DisabledInput","import React from 'react'\nimport {connect} from 'react-redux'\nimport RiskTable from './../components/RiskTable'\nimport DisabledInput from './../components/DisabledInput'\nimport { withRouter } from 'react-router-dom';\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      allPortFolioAmounts: false,\n      isInvalid: false,\n      newAmount: [],\n      transfers: []\n    }\n  }\n  componentDidMount () {\n    if (this.props.riskPreference.length === 0) {\n      this.props.history.push('/home')\n    }\n    this.activateRebalance(this.props.portfolioData)\n  }\n  rebalance = () => {\n    let allValues = Object.values(this.props.portfolioData).map(Number)\n    let isInvalid = allValues.some(i => (isNaN(Number(i)) || Number(i) < 0))\n    this.setState({isInvalid})\n    if (!isInvalid) {\n      let sum = allValues.reduce((a, b) => a + b, 0)\n      let labelMap = {\n        0: 'Bonds',\n        1: 'Large Cap',\n        2: 'Mid Cap',\n        3: 'Foreign',\n        4: 'Small Cap'\n      }\n      let riskPreferenceValues = Object.values(this.props.riskPreference[0])\n      riskPreferenceValues.shift()\n      let values = [...riskPreferenceValues]\n      let newAmount = values.map((item, id) => {\n        return {\n          label: labelMap[id],\n          new: this.setFixedDecimal(Number((sum * item/100))),\n          difference: Number(this.setFixedDecimal((sum * item/100) - allValues[id])),\n          balance: Number(this.setFixedDecimal((sum * item/100) - allValues[id]))\n        }\n      })\n      let amt = newAmount.slice(0)\n      this.setState({newAmount: amt})\n      this.recommendTransfers(amt) \n    }\n  }\n\n  getTransferStatement = (amount, from, to) => {\n    return `Transfer $${this.setFixedDecimal(amount)} from ${from} to ${to}`\n  } \n\n  setFixedDecimal = (val) => (Math.round(100 * val)/100)\n\n  recommendTransfers = (data) => {\n    let transfers = []\n    let negativeAmount = [...data].filter(item => item.difference < 0)\n    let postiveAmount = [...data].filter(item => item.difference > 0)\n    // console.log(negativeAmount.length , 'negativeAmount.length ')\n    // if (negativeAmount.length === 1) {\n    //   postiveAmount.forEach((pitem, id) => {\n    //     transfers.push(this.getTransferStatement(pitem.difference, negativeAmount[0].label, pitem.label ))\n    //   })\n    // }\n    // if (negativeAmount.length === 4) {\n    //   negativeAmount.forEach((nitem, id) => {\n    //     transfers.push(this.getTransferStatement(-nitem.difference, nitem.label, postiveAmount[0].label ))\n    //   })\n    // }\n    // if (negativeAmount.length === 2) {\n    //   negativeAmount.sort((a, b) => a.difference - b.difference)\n    //   postiveAmount.sort((a, b) => a.difference - b.difference)\n    //   console.log(postiveAmount, negativeAmount)\n    //   negativeAmount.forEach((nitem, i) => {\n    //     postiveAmount.forEach((pitem, j) => {\n    //       if(Math.abs(nitem.balance) > pitem.balance) {\n    //         nitem.balance = this.setFixedDecimal(nitem.balance + pitem.balance)\n    //         if (pitem.balance > 0) {\n    //           transfers.push(this.getTransferStatement(pitem.balance, nitem.label, pitem.label ))\n    //         }\n    //         pitem.balance = 0\n    //       } else {\n    //         transfers.push(this.getTransferStatement(-nitem.balance, nitem.label, pitem.label ))\n    //         pitem.balance = pitem.balance + nitem.balance\n    //         nitem.balance = 0\n    //       }\n    //     })\n    //   })\n    // }\n    // if (negativeAmount.length === 3) {\n    //   negativeAmount.sort((a, b) => a.difference - b.difference)\n    //   postiveAmount.sort((a, b) => a.difference - b.difference)\n    //   console.log(postiveAmount, negativeAmount)\n    //   negativeAmount.forEach((nitem, i) => {\n    //     postiveAmount.forEach((pitem, j) => {\n    //       if(Math.abs(nitem.balance) > pitem.balance) {\n    //         nitem.balance = this.setFixedDecimal(nitem.balance + pitem.balance)\n    //         if (pitem.balance > 0) {\n    //           transfers.push(this.getTransferStatement(pitem.balance, nitem.label, pitem.label ))\n    //         }\n    //         pitem.balance = 0\n    //       } else {\n    //         transfers.push(this.getTransferStatement(-nitem.balance, nitem.label, pitem.label ))\n    //         pitem.balance = pitem.balance + nitem.balance\n    //         nitem.balance = 0\n    //       }\n    //     })\n    //   })\n    // }\n    negativeAmount.sort((a, b) => a.difference - b.difference)\n    postiveAmount.sort((a, b) => a.difference - b.difference)\n    negativeAmount.forEach((nitem, i) => {\n      postiveAmount.forEach((pitem, j) => {\n        if(Math.abs(nitem.balance) > pitem.balance) {\n          nitem.balance = this.setFixedDecimal(nitem.balance + pitem.balance)\n          if (pitem.balance > 0) {\n            transfers.push(this.getTransferStatement(pitem.balance, nitem.label, pitem.label ))\n          }\n          pitem.balance = 0\n        } else {\n          transfers.push(this.getTransferStatement(-nitem.balance, nitem.label, pitem.label ))\n          pitem.balance = pitem.balance + nitem.balance\n          nitem.balance = 0\n        }\n      })\n    })\n    this.setState({transfers})\n  }\n  onHandleChange = (e) => {\n    let payload = { ...this.props.portfolioData }\n    payload[e.target.name] = e.target.value\n    this.props.onSetPayLoad(payload)\n    this.activateRebalance(payload)\n  }\n  activateRebalance = (data) => {\n    let allPortFolioAmounts = Object.values(data).filter(i => i).length === 5 \n    this.setState({allPortFolioAmounts})\n  }\n\n  getDiffAndNewCols = (key) => {\n    let newAmount = [...this.state.newAmount]\n    if (newAmount.length > 0) {\n      let value = {\n        bond: newAmount[0].new,\n        largeCap: newAmount[1].new,\n        midCap: newAmount[2].new,\n        foreign: newAmount[3].new,\n        smallCap: newAmount[4].new,\n        bondDif: newAmount[0].difference > 0 ? '+'+newAmount[0].difference : newAmount[0].difference,\n        largeCapDif: newAmount[1].difference > 0 ? '+'+newAmount[1].difference : newAmount[1].difference,\n        midCapDif: newAmount[2].difference > 0 ? '+'+newAmount[2].difference : newAmount[2].difference,\n        foreignDif: newAmount[3].difference > 0 ? '+'+newAmount[3].difference : newAmount[3].difference,\n        smallCapDif: newAmount[4].difference > 0 ? '+'+newAmount[4].difference : newAmount[4].difference\n      }\n      return value[key]\n    } \n    return ''\n  }\n  render () {\n    let {bond, largeCap, midCap, smallCap, foreign} = this.props.portfolioData\n    let {riskPreference, selectedRow} = this.props\n    return (\n      <div className='container wid-50-percent'>\n        <div className='text-center'>\n          <h3>Personalized Portfolio</h3>\n        </div>\n        <div className='text-left'>\n          <h3>Risk Level {selectedRow}</h3>\n          <RiskTable data={riskPreference}/>\n        </div>\n        <div className='text-left portfolio-label'>\n          <h2>Please Enter Your Current Portfolio</h2>\n          <span onClick={this.rebalance} \n          style={!this.state.allPortFolioAmounts ? {opacity:0.3} : null}\n            className='portfolio-rebalance'>\n              Rebalance\n          </span>\n        </div>\n        <table className=\"table table-bordered wid-20-percent\">\n          <thead>\n            <tr>\n              <th>Current Amount</th>\n              <th>Difference</th>\n              <th>New Amount</th>\n              <th>Recommended Transfers</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <span>Bonds $:</span> \n                <input \n                  name=\"bond\" \n                  onChange={this.onHandleChange} \n                  value={bond} \n                  className='input-table text-right'\n                  type=\"text\"/>\n              </td>\n              <td>\n                <DisabledInput value={this.getDiffAndNewCols('bondDif')} />\n              </td>\n              <td>\n                <DisabledInput new value={this.getDiffAndNewCols('bond')} />\n              </td>\n              <td rowSpan='0' style={{color: 'red'}}>\n                {\n                  this.state.isInvalid \n                  ?\n                  'Please use only positive digits or zero when entering current amounts. Please enter all inputs correctly.'\n                  :\n                  <ul>{this.state.transfers.map((v,i) => <li key={i}>{v}</li>)}</ul>\n                }\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <span>Large Cap $:</span>\n                <input \n                  name='largeCap'\n                  onChange={this.onHandleChange} \n                  value={largeCap}\n                  className='input-table text-right' type=\"text\"/>\n              </td>\n              <td>\n                <DisabledInput value={this.getDiffAndNewCols('largeCapDif')} />\n              </td>\n              <td>\n                <DisabledInput new value={this.getDiffAndNewCols('largeCap')} />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <span>Mid Cap $:</span> \n                <input name='midCap'\n                  onChange={this.onHandleChange} \n                  value={midCap}\n                  className='input-table text-right' type=\"text\"/>\n              </td>\n              <td>\n                <DisabledInput value={this.getDiffAndNewCols('midCapDif')} />\n              </td>\n              <td>\n                <DisabledInput new value={this.getDiffAndNewCols('midCap')} />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <span>Foreign $:</span> \n                <input name='foreign'\n                  onChange={this.onHandleChange} \n                  value={foreign}\n                  className='input-table text-right' type=\"text\"/>\n              </td>\n              <td>\n                <DisabledInput value={this.getDiffAndNewCols('foreignDif')} />\n              </td>\n              <td>\n                <DisabledInput new value={this.getDiffAndNewCols('foreign')} />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <span>Small Cap $:</span>\n                <input name='smallCap'\n                  onChange={this.onHandleChange} \n                  value={smallCap}\n                  className='input-table text-right' type=\"text\"/>\n              </td>\n              <td>\n                <DisabledInput value={this.getDiffAndNewCols('smallCapDif')} />\n              </td>\n              <td>\n                <DisabledInput new value={this.getDiffAndNewCols('smallCap')} />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedRow: state.selectedRiskPreference,\n    riskPreference: state.selectedRiskData,\n    portfolioData: state.portfolioData\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetPayLoad: (payload) => dispatch({type: 'INPUT_DATA', payload: payload})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Calculator))","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './Navbar'\nimport Home from './pages/home'\nimport Calculator from './pages/calculator'\n\nexport default function AppRouter() {\n  return (\n    <Router>\n      <div>\n        <Navbar/>\n        <Switch>\n          <Route path='/home'>\n            <Home />\n          </Route>\n          <Route path='/calculator'>\n            <Calculator />\n          </Route>\n          <Route path='/'>\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}","import React from 'react';\nimport AppRouter from './AppRouter'\nimport './style.scss';\n\nexport default function App() {\n  return (<AppRouter/>)\n}\n","import {riskData} from '../DummyData'\n\nconst initialState = {\n  selectedRiskPreference: 0,\n  selectedRiskData: [],\n  portfolioData: {\n    bond: '',\n    largeCap: '',\n    midCap: '',\n    foreign: '',\n    smallCap: ''\n  }\n}\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === 'SELECT_RISK_ROW') {\n    let selectedRiskData = riskData.filter(data => data.riskPreference === action.value)\n    return {\n      selectedRiskPreference: action.value,\n      selectedRiskData: [...selectedRiskData],\n      portfolioData: state.portfolioData\n    }\n  }\n  if (action.type === 'INPUT_DATA') {\n    return {\n      selectedRiskPreference: state.selectedRiskPreference,\n      selectedRiskData: state.selectedRiskData,\n      portfolioData: {...action.payload},\n    }\n  }\n  return state\n}\n\nexport default reducer","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './store/reducer'\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <Provider store={store}><App /></Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}